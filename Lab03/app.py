import os
from dotenv import load_dotenv
import streamlit as st
import requests
import pandas as pd

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–∫–µ–Ω
load_dotenv()
HF_TOKEN = os.getenv("HF_TOKEN")

API_URL = "https://api-inference.huggingface.co/models/j-hartmann/emotion-english-distilroberta-base"
headers = {"Authorization": f"Bearer {HF_TOKEN}"}

def query(payload):
    response = requests.post(API_URL, headers=headers, json=payload)
    if response.status_code != 200:
        return {"error": f"–û—à–∏–±–∫–∞: {response.status_code}", "raw_response": response.text}
    try:
        return response.json()
    except:
        return {"error": "–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å –æ—Ç–≤–µ—Ç", "raw_response": response.text}

st.set_page_config(page_title="–ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π", page_icon="ü§ó", layout="centered")
st.title("ü§ó –ê–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π –≤ —Ç–µ–∫—Å—Ç–µ (Hugging Face)")

text = st.text_area("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞:")

if st.button("–û—Ç–ø—Ä–∞–≤–∏—Ç—å") and text:
    with st.spinner("–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º..."):
        output = query({"inputs": text})

    if "error" in output:
        st.error(output["error"])
        st.write(output.get("raw_response", ""))
    else:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —ç–º–æ—Ü–∏–π
        emotions = output[0]
        df = pd.DataFrame(emotions)
        df["score"] = df["score"].apply(lambda x: round(x * 100, 2))
        df = df.sort_values(by="score", ascending=False)

        # –ù–∞—Ö–æ–¥–∏–º –≥–ª–∞–≤–Ω—É—é —ç–º–æ—Ü–∏—é
        main_emotion = df.iloc[0]["label"]
        main_score = df.iloc[0]["score"]

        # –≠–º–æ–¥–∑–∏ –¥–ª—è —ç–º–æ—Ü–∏–π
        emoji_map = {
            "joy": "üòä",
            "anger": "üò°",
            "sadness": "üò¢",
            "fear": "üò®",
            "surprise": "üò≤",
            "love": "‚ù§Ô∏è",
            "disgust": "ü§¢",
            "neutral": "üòê"
        }
        emoji = emoji_map.get(main_emotion, "ü§î")

        st.subheader(f"üé≠ –û—Å–Ω–æ–≤–Ω–∞—è —ç–º–æ—Ü–∏—è: **{main_emotion.capitalize()} {emoji} ({main_score}%)**")

        # –¢–∞–±–ª–∏—Ü–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
        st.write("üìä –ü–æ–¥—Ä–æ–±–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —ç–º–æ—Ü–∏–π:")
        st.dataframe(df, use_container_width=True)

        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è
        st.bar_chart(df.set_index("label")["score"])

